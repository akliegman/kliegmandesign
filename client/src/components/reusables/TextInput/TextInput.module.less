@import (reference) "../../../styles/variables";

.TextInput {
  position: relative;
  min-width: 16rem;
  width: 100%;

  .Input {
    border: 1px solid transparent;
    border-radius: @border-radius-default;
    font-family: @font-family-sans-serif;
    padding: 0 1rem;
    position: relative;
    height: 3rem;
    font-size: 1rem;
    line-height: 1.5rem;
    font-weight: 500;
    width: 100%;
    color: @color-gray-100;
    transition: @transition-all;
    box-shadow: none;

    &:hover {
      border-color: @color-red-1000;
    }
    &:focus {
      border-color: @color-white;
      outline-color: @color-red-800;
      outline-offset: 0.125rem;
      outline-width: 1.5px;
      outline-style: solid;
    }
  }

  &:focus-within {
    .Icon {
      color: @color-red-300;
    }
  }

  @icon-size: 1.25rem;
  @icon-position: calc((3rem - @icon-size) / 2);

  .Icon {
    position: absolute;
    left: @icon-position;
    top: @icon-position;
    height: @icon-size;
    width: @icon-size;
    z-index: 1;
    color: @color-red-900;
    transition: @transition-all;
    :global .anticon-key {
      transform: rotate(180deg);
    }
    svg {
      height: @icon-size;
      width: @icon-size;
      transition: @transition-all;
    }
  }

  &.withIcon {
    .Input {
      padding-left: calc(@icon-size + @icon-position + @icon-position);
    }
  }

  &.Error {
    animation: inputShake 0.5s cubic-bezier(0.19, 1, 0.22, 1) 1;

    .Input {
      box-shadow: 0 0 2px @color-red-400;
    }
    &.withIcon {
      .Icon {
        color: @color-red-400;
      }
    }
  }

  &.Disabled {
    ::placeholder {
      color: @color-gray-700 !important;
    }
    .Input {
      background-color: @color-gray-900 !important;
      color: @color-gray-700 !important;
      box-shadow: none !important;
      border-color: @color-gray-900 !important;
      cursor: not-allowed;
    }
    &.withIcon {
      .Icon {
        color: @color-gray-700 !important;
      }
    }
  }
}

@keyframes inputShake {
  0% {
    transform: translateX(0);
  }
  12.5% {
    transform: translateX(-0.125rem);
  }
  25% {
    transform: translateX(0.125rem);
  }
  37.5% {
    transform: translateX(-0.125rem);
  }
  50% {
    transform: translateX(-0.125rem);
  }
  62.5% {
    transform: translateX(0.125rem);
  }
  75% {
    transform: translateX(-0.125rem);
  }
  87.5% {
    transform: translateX(0.125rem);
  }
  100% {
    transform: translateX(0);
  }
}
